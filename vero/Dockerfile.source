# hadolint global ignore=DL3007,DL3008,DL3059,DL4006
ARG VENV_LOCATION="/opt/venv"

# Build image
FROM python:3.12-trixie AS builder

# Unused but included to avoid warnings
ARG DOCKER_TAG
ARG DOCKER_REPO

WORKDIR /build

RUN apt-get update && apt-get install --no-install-recommends -y bash git && \
   apt-get clean && rm -rf /var/lib/apt/lists/*

ARG BUILD_TARGET=master
ARG SRC_REPO=https://github.com/serenita-org/vero
ARG VENV_LOCATION

ENV PATH="$VENV_LOCATION/bin:$PATH"
# Pin uv to 0.6 until https://github.com/serenita-org/vero/pull/193 is in a release
RUN pip install --no-cache-dir uv~=0.6.17 && uv venv ${VENV_LOCATION}

ARG SRC_DIR=vero
RUN bash -eo pipefail <<'EOF'
  git clone "$SRC_REPO" "$SRC_DIR"
  cd "$SRC_DIR"
  git config advice.detachedHead false
  git fetch --all --tags
  CLEANED=$(echo "$BUILD_TARGET" | sed 's/\$\$(/$(/g')
  TARGET=$(eval echo "$CLEANED")
  if [[ "$TARGET" =~ pr-.+ ]]; then
    git fetch origin pull/$(echo "$TARGET" | cut -d '-' -f 2)/head:build-pr
    git checkout build-pr
  else
    git checkout "$TARGET"
  fi
  uv pip sync --prefix ${VENV_LOCATION} requirements.txt
EOF


# App image
FROM python:3.12-trixie

RUN set -eux; \
  apt-get update && DEBIAN_FRONTEND=noninteractive TZ=Etc/UTC apt-get install -y --no-install-recommends gosu ca-certificates tzdata git wget curl \
  && gosu nobody true \
  && apt-get clean \
  && rm -rf /var/lib/apt/lists/*

ARG VENV_LOCATION
COPY --from=builder $VENV_LOCATION $VENV_LOCATION
ENV PATH="$VENV_LOCATION/bin:$PATH"

ARG USER=vero
ARG UID=10000

RUN groupadd -g ${UID} ${USER} && \
  useradd --no-create-home --shell /bin/false -l -u ${UID} -g ${USER} ${USER}

RUN mkdir -p /vero && chown -R ${USER}:${USER} /vero
WORKDIR /vero

# Create directory for prometheus in multiprocess mode
RUN mkdir /tmp/multiprocessing && chown -R ${USER}:${USER} /tmp/multiprocessing
ENV PROMETHEUS_MULTIPROC_DIR=/tmp/multiprocessing

COPY --chown=${USER}:${USER} --from=builder /build/vero/src .

# Create data mount point with permissions
RUN mkdir -p /var/lib/vero && chown -R ${USER}:${USER} /var/lib/vero && chmod -R 700 /var/lib/vero

# Cannot assume buildkit, hence no chmod
COPY --chown=${USER}:${USER} ./docker-entrypoint.sh /usr/local/bin/
# Belt and suspenders
RUN chmod -R 755 /usr/local/bin/*

USER ${USER}

ENTRYPOINT ["python", "main.py"]
